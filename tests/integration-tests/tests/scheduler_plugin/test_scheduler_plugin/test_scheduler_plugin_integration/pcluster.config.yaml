Image:
  Os: {{ os }}
HeadNode:
  InstanceType: {{ instance }}
  Networking:
    SubnetId: {{ public_subnet_id }}
  Ssh:
    KeyName: {{ key_name }}
Scheduling:
  Scheduler: plugin
  SchedulerSettings:
    GrantSudoPrivileges: true
    SchedulerDefinition:
      PluginInterfaceVersion: "1.0"
      Events:
        HeadInit:
          ExecuteCommand:
            Command: env && echo "HeadInit executed" && >&2 echo "log to stderr"
        HeadConfigure:
          ExecuteCommand:
            Command: env && echo "HeadConfigure executed"
        HeadFinalize:
          ExecuteCommand:
            Command: touch ${PCLUSTER_SHARED_SCHEDULER_PLUGIN_DIR}/sharedFromHead && env && echo "HeadFinalize executed"
        ComputeInit:
          ExecuteCommand:
            Command: env && echo "ComputeInit executed"
        ComputeConfigure:
          ExecuteCommand:
            Command: env && echo "ComputeConfigure executed"
        ComputeFinalize:
          ExecuteCommand:
            Command: env && echo "ComputeFinalize executed"
        HeadClusterUpdate:
          ExecuteCommand:
            Command: env && echo "HeadClusterUpdate executed"
        HeadComputeFleetUpdate:
          ExecuteCommand:
            Command: |
              env
              STATUS=$(cat ${PCLUSTER_COMPUTEFLEET_STATUS} | jq -r '.status')
              if [[ "${STATUS}" == "STOP_REQUESTED" ]] && [[ ! -f "stop_failure" ]]; then
                echo "HeadComputeFleetUpdate failing the first stop execution"
                touch stop_failure && exit 1
              fi
              if [[ "${STATUS}" == "STOP_REQUESTED" ]] && [[ ! -f "stop_executed" ]]; then
                echo "HeadComputeFleetUpdate stop executed"
                touch stop_executed && exit 0
              fi
              if [[ "${STATUS}" == "START_REQUESTED" ]] && [[ ! -f "start_failure" ]]; then
                echo "HeadComputeFleetUpdate failing the first start execution"
                touch start_failure && exit 1
              fi
              if [[ "${STATUS}" == "START_REQUESTED" ]] && [[ ! -f "start_executed" ]]; then
                echo "HeadComputeFleetUpdate start executed"
                touch start_executed && exit 0
              fi
              echo "HeadComputeFleetUpdate not supposed to be here"
              touch update_wrong_execution
      Monitoring:
        Logs:
          Files:
            - FilePath: /var/log/cfn-init-cmd.log
              TimestampFormat: "%Y-%m-%d %H:%M:%S,%f"
              NodeType: HEAD
              LogStreamName: test_cfn_init_cmd.log
            - FilePath: /opt/aws/amazon-cloudwatch-agent/logs/configuration-validation.log
              NodeType: COMPUTE
              LogStreamName: test_configuration_validation.log
            - FilePath: /opt/aws/amazon-cloudwatch-agent/logs/amazon-cloudwatch-agent.log
              TimestampFormat: "%Y/%m/%d %H:%M:%S"
              LogStreamName: test_amazon_cloudwatch_agent.log
      PluginResources:
        ClusterSharedArtifacts:
          - Source: https://${Region}-aws-parallelcluster.s3.${Region}.${URLSuffix}/parallelcluster/3.0.0/cookbooks/aws-parallelcluster-cookbook-3.0.0.tgz
          - Source: s3://{{ bucket }}/{{ bucket_key_prefix }}/scheduler_plugin/artifact
            Checksum: cb30bed55f490e4f718dec95d841c5db175d9f9c5342fd8cb29af873e0efd9ee
            S3BucketOwner: '{{account_id}}'
      ClusterInfrastructure:
        CloudFormation:
          Template: s3://{{ bucket }}/{{ bucket_key_prefix }}/scheduler_plugin/scheduler_plugin_infra.cfn.yaml
          Checksum: 6f9db6ee447ef457e8e58a0da79c14039154f5b4785a03a2fd2348079f90cf1e
          S3BucketOwner: '{{account_id}}'
      SystemUsers:
        - Name: {{ user1 }}
          EnableImds: false
          SudoerConfiguration:
            - Commands: ALL
              RunAs: root
            - Commands: /bin/ls, /usr/bin/touch
              RunAs: {{ run_as_user }}
        - Name: {{ user2 }}
          EnableImds: true
          SudoerConfiguration:
            - Commands: /bin/ls
              RunAs: root
      Tags:
        - Key: SchedulerPluginTag
          Value: SchedulerPluginTagValue
  SchedulerQueues:
    - Name: q1
      CapacityType: ONDEMAND
      ComputeResources:
        - Name: c1
          InstanceType: {{ instance }}
        - Name: c2
          InstanceType: {{ instance }}
      Networking:
        SubnetIds:
          - {{ private_subnet_id }}
    - Name: q2
      CapacityType: ONDEMAND
      ComputeResources:
        - Name: c1
          InstanceType: {{ another_instance }}
      Networking:
        SubnetIds:
          - {{ private_subnet_id }}
SharedStorage:
  - MountDir: /shared
    Name: name1
    StorageType: Ebs
Tags:
  - Key: ConfigFileTag
    Value: ConfigFileTagValue
