Image:
  Os: {{ os }}
CustomS3Bucket: {{ bucket }}
HeadNode:
  InstanceType: {{ instance }}
  Networking:
    SubnetId: {{ public_subnet_id }}
  Ssh:
    KeyName: {{ key_name }}
  Iam:
    S3Access:
      - BucketName: {{ bucket }}
        EnableWriteAccess: true
Scheduling:
  Scheduler: {{ scheduler }}
  {{ scheduler_prefix }}Queues:
  {% for strategy in scaling_strategies %}
    - Name: {{ strategy }}-broken
      {% if strategy=="job-level" %}
      JobExclusiveAllocation: true
      {% endif %}
      Networking:
        SubnetIds:
          - {{ private_subnet_ids[0] }}
          {% if scheduler == "slurm" %}
          - {{ private_subnet_ids[1] }}
          {% endif %}
      CustomActions:
        OnNodeStart:
          # pre-install script to make c5.large instance type instance has bootstrap error
          Script: s3://{{ bucket }}/scripts/preinstall.sh
      ComputeResources:
        - Name: broken-static
          Instances:
            - InstanceType: c5.large # instance type has bootstrap failure
          MinCount: 2
          MaxCount: 250
      Iam:
        S3Access:
          - BucketName: {{ bucket }}
            EnableWriteAccess: true
    - Name: {{ strategy }}-half-broken
      {% if strategy=="job-level" %}
      JobExclusiveAllocation: true
      {% endif %}
      Networking:
        SubnetIds:
          - {{ private_subnet_ids[0] }}
          {% if scheduler == "slurm" %}
          - {{ private_subnet_ids[1] }}
          {% endif %}
      CustomActions:
        OnNodeStart:
          # pre-install script to make c5.large instance type instance has bootstrap error
          Script: s3://{{ bucket }}/scripts/preinstall.sh
      ComputeResources:
        - Name: broken-dynamic
          Instances:
            - InstanceType: c5.large # instance type has bootstrap failure
          MaxCount: 250
        - Name: working-static
          Instances:
            - InstanceType: c5.xlarge # instance type works as expected
          MinCount: 1
          MaxCount: 250
      Iam:
        S3Access:
          - BucketName: {{ bucket }}
            EnableWriteAccess: true
    - Name: {{ strategy }}-normal
      {% if strategy=="job-level" %}
      JobExclusiveAllocation: true
      {% endif %}
      Networking:
        SubnetIds:
          - {{ private_subnet_ids[0] }}
          {% if scheduler == "slurm" %}
          - {{ private_subnet_ids[1] }}
          {% endif %}
      CustomActions:
        OnNodeStart:
          # pre-install script to make c5.large instance type instance has bootstrap error
          Script: s3://{{ bucket }}/scripts/preinstall.sh
      ComputeResources:
        - Name: normal
          Instances:
            - InstanceType: c5.xlarge # instance type works as expected
          MinCount: 1
          MaxCount: 250
      Iam:
        S3Access:
          - BucketName: {{ bucket }}
            EnableWriteAccess: true
  {% endfor %}
SharedStorage:
  - MountDir: /shared  # Test comment
    Name: name1
    StorageType: Ebs
