Image:
  Os: {{ os }}
CustomS3Bucket: {{ bucket }}
HeadNode:
  InstanceType: {{ instance }}
  Networking:
    SubnetId: {{ public_subnet_id }}
  Ssh:
    KeyName: {{ key_name }}
  Iam:
    S3Access:
      - BucketName: {{ bucket }}
        EnableWriteAccess: true
Scheduling:
  Scheduler: {{ scheduler }}
  {{ scheduler_prefix }}Queues:
    - Name: broken
      Networking:
        SubnetIds:
          - {{ private_subnet_id }}
          - {{ private_az2_subnet_id }}
      ComputeResources:
        - Name: broken-static
          {% if scheduler == "plugin" %}
          InstanceType: c5.large # instance type has bootstrap failure
          {% else %}
          Instances:
            - InstanceType: c5.large # instance type has bootstrap failure
          {% endif %}
          MinCount: 3 # Set min_count larger than bootstrap failure threshold (which is 2) to test pcluster stop and start don't treat static nodes as bootstrap failure nodes and not set into protected node
      Iam:
        S3Access:
          - BucketName: {{ bucket }}
            EnableWriteAccess: true
    - Name: half-broken
      Networking:
        SubnetIds:
          - {{ private_subnet_id }}
          - {{ private_az2_subnet_id }}
      ComputeResources:
        - Name: broken-dynamic
          {% if scheduler == "plugin" %}
          InstanceType: c5.large # instance type has bootstrap failure
          {% else %}
          Instances:
            - InstanceType: c5.large # instance type has bootstrap failure
          {% endif %}
        - Name: working-static
          {% if scheduler == "plugin" %}
          InstanceType: c5.xlarge # instance type has bootstrap failure
          {% else %}
          Instances:
            - InstanceType: c5.xlarge # instance type works as expected
          {% endif %}
      Iam:
        S3Access:
          - BucketName: {{ bucket }}
            EnableWriteAccess: true
    - Name: normal
      Networking:
        SubnetIds:
          - {{ private_subnet_id }}
          - {{ private_az2_subnet_id }}
      ComputeResources:
        - Name: normal
          {% if scheduler == "plugin" %}
          InstanceType: c5.xlarge # instance type works as expected
          {% else %}
          Instances:
            - InstanceType: c5.xlarge # instance type works as expected
          {% endif %}
      Iam:
        S3Access:
          - BucketName: {{ bucket }}
            EnableWriteAccess: true
SharedStorage:
  - MountDir: /shared  # Test comment
    Name: name1
    StorageType: Ebs
