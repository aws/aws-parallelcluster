[tox]
envlist =
    py{26,27,34,35,36,37}
    linters
    docs-{linters,linkcheck,spelling}
    doc8
    cfn-{tests,lint,format-check}

[travis]
python =
    2.6: py26
    2.7: py27
    3.4: py34
    3.5: py35
    3.6: py36, docs-linters, cfn-format-check

[testenv]
# deps = -rtests/requirements.txt  TODO: ADD UNIT TESTS
whitelist_externals:
    bash
commands =
    bash ./tests/pcluster/test.sh
    # TODO: ADD UNIT TESTS
    # py.test -l --basetemp={envtmpdir} --html=report.html --cov=pcluster tests/


##############################
###     AUTO-FORMATTER     ###
##############################
[testenv:black-cmd]
basepython = python3
skip_install = true
deps =
    black
commands =
    black -l 120 -N  \
        setup.py \
        awsbatch/ \
        pcluster/ \
        {posargs}

[testenv:black]
basepython = python3
skip_install = true
deps =
    {[testenv:black-cmd]deps}
commands =
    {[testenv:black-cmd]commands}

[testenv:black-check]
basepython = python3
skip_install = true
deps =
    {[testenv:black-cmd]deps}
commands =
    {[testenv:black-cmd]commands} --check --diff

[testenv:isort]
basepython = python3
skip_install = true
deps = isort
commands =
    isort -rc \
        setup.py \
        awsbatch/ \
        pcluster/ \
        {posargs}

[testenv:isort-check]
basepython = python3
skip_install = true
deps = {[testenv:isort]deps}
commands = {[testenv:isort]commands} --check --diff

[testenv:autoformat]
basepython = python3
skip_install = true
deps =
    {[testenv:black]deps}
    {[testenv:isort]deps}
commands =
    {[testenv:black]commands}
    {[testenv:isort]commands}


#############################
###        LINTERS        ###
#############################
[testenv:flake8]
basepython = python3
skip_install = true
deps =
    flake8
    flake8-docstrings
    flake8-bugbear
    flake8-mypy
    flake8-import-order
    flake8-colors
    pep8-naming
commands =
    flake8 \
        setup.py \
        awsbatch/ \
        pcluster/ \
        {posargs}

[testenv:bandit]
basepython = python3
skip_install = true
deps =
    bandit
commands =
    bandit -r \
        setup.py \
        awsbatch/ \
        pcluster/ \
        {posargs}

[testenv:readme]
basepython = python3
skip_install = true
deps =
    readme_renderer
commands =
    python setup.py check -r -s

[testenv:pylint]
basepython = python3
skip_install = true
deps =
    pyflakes
    pylint
commands =
    pylint \
        setup.py \
        awsbatch/ \
        pcluster/ \
        {posargs}

[testenv:vulture]
basepython = python3
skip_install = true
deps =
    vulture
commands =
    vulture \
        setup.py \
        awsbatch/ \
        pcluster/ \
        {posargs}

[testenv:mypy]
basepython = python3
deps =
    mypy
commands =
    mypy \
        setup.py \
        awsbatch/ \
        pcluster/ \
        {posargs}

[testenv:linters]
basepython = python3
skip_install = true
deps =
    {[testenv:black-check]deps}
    {[testenv:isort-check]deps}
    {[testenv:flake8]deps}
    {[testenv:pylint]deps}
    {[testenv:bandit]deps}
    {[testenv:readme]deps}
commands =
    {[testenv:black-check]commands}
    {[testenv:isort-check]commands}
    {[testenv:flake8]commands}
    {[testenv:pylint]commands}
    {[testenv:bandit]commands}
    {[testenv:readme]commands}


##############################
###     CLOUDFORMATION     ###
##############################
[testenv:cfn-lint]
basepython = python3
skip_install = true
changedir =
    ../cloudformation
deps = cfn-lint
# E2504 disabled since does not allow two-digit numbers in ephemeral(n)
# E2502 disabled since was not working correctly in the substack
# W2507 disabled since we want to have nullable String type parameters
commands = cfn-lint -iE2504 -iE2502 -iW2507 *.cfn.json

[testenv:cfn-format-check]
basepython = python3
skip_install = true
changedir =
    ../cloudformation
commands =
    python utils/json_formatter.py -c *.cfn.json

[testenv:cfn-format]
basepython = python3
skip_install = true
changedir =
    ../cloudformation
commands =
    python utils/json_formatter.py -c *.cfn.json

[testenv:cfn-tests]
basepython = python3
skip_install = true
changedir =
    ../cloudformation
commands =
    py.test -l --basetemp={envtmpdir} tests/


#############################
###     DOCUMENTATION     ###
#############################
[testenv:doc8]
basepython = python3
skip_install = true
changedir = ../docs
deps = -r../docs/requirements.txt
commands =
    doc8 --max-line-length 120 --ignore-path build .

[testenv:docs]
basepython = python3
whitelist_externals =
    make
deps = -r../docs/requirements.txt
changedir = ../docs
setenv = SPHINXOPTS=-E -W
commands =
    make html
    make man

[testenv:serve-docs]
basepython = python3
skip_install = true
changedir = ../docs/build/html
deps =
commands =
    python -m http.server {posargs}

[testenv:docs-spelling]
basepython = python3
skip_install = true
whitelist_externals =
    make
deps = -r../docs/requirements.txt
changedir = ../docs
setenv = SPHINXOPTS=-E -W
commands =
    make spelling

[testenv:docs-linkcheck]
basepython = python3
skip_install = true
whitelist_externals =
    make
deps = -r../docs/requirements.txt
changedir = ../docs
commands =
    make linkcheck

[testenv:docs-linters]
basepython = python3
skip_install = true
changedir = ../docs
setenv =
    {[testenv:docs-spelling]setenv}
whitelist_externals =
    {[testenv:docs-linkcheck]whitelist_externals}
    {[testenv:docs-spelling]whitelist_externals}
deps =
    {[testenv:doc8]deps}
    {[testenv:docs-linkcheck]deps}
    {[testenv:docs-spelling]deps}
commands =
    {[testenv:doc8]commands}
    {[testenv:docs-linkcheck]commands}
    {[testenv:docs-spelling]commands}

[testenv:docs-autoformat]
basepython = python3
skip_install = true
changedir = ../docs
whitelist_externals =
    bash
commands =
    bash utils/format_docs.sh

#############################
###        TOOLING        ###
#############################
[testenv:build]
basepython = python3
skip_install = true
deps =
    wheel
    setuptools
commands =
    python setup.py -q sdist bdist_wheel

