[tox]
envlist =
    py{26,27,34,35,36,37}
    linters
    docs-linkcheck
    docs-spelling
    cfn-tests
    cfn-lint

[testenv]
deps = -rtests/requirements.txt
commands =
    # TODO: ADD UNIT TESTS
    # py.test -l --basetemp={envtmpdir} --html=report.html --cov=pcluster tests/


##############################
###     AUTO-FORMATTER     ###
##############################
[testenv:black-cmd]
basepython = python3
skip_install = true
deps =
    black
commands =
    black -l 120 -N  \
        setup.py \
        awsbatch/ \
        pcluster/ \
        {posargs}

[testenv:black]
basepython = python3
skip_install = true
deps =
    {[testenv:black-cmd]deps}
commands =
    {[testenv:black-cmd]commands}

[testenv:black-check]
basepython = python3
skip_install = true
deps =
    {[testenv:black-cmd]deps}
commands =
    {[testenv:black-cmd]commands} --check --diff

[testenv:isort]
basepython = python3
skip_install = true
deps = isort
commands =
    isort -rc \
        setup.py \
        awsbatch/ \
        pcluster/ \
        {posargs}

[testenv:isort-check]
basepython = python3
skip_install = true
deps = {[testenv:isort]deps}
commands = {[testenv:isort]commands} --check --diff

[testenv:autoformat]
basepython = python3
skip_install = true
deps =
    {[testenv:black]deps}
    {[testenv:isort]deps}
commands =
    {[testenv:black]commands}
    {[testenv:isort]commands}


#############################
###        LINTERS        ###
#############################
[testenv:flake8]
basepython = python3
skip_install = true
deps =
    flake8
    flake8-docstrings
    flake8-bugbear
    flake8-mypy
    flake8-import-order
    flake8-colors
    pep8-naming
commands =
    flake8 \
        setup.py \
        awsbatch/ \
        pcluster/ \
        {posargs}

[testenv:bandit]
basepython = python3
skip_install = true
deps =
    bandit
commands =
    bandit -r \
        setup.py \
        awsbatch/ \
        pcluster/ \
        {posargs}

[testenv:readme]
basepython = python3
skip_install = true
deps =
    readme_renderer
commands =
    python setup.py check -r -s

[testenv:pylint]
basepython = python3
skip_install = true
deps =
    pyflakes
    pylint
commands =
    pylint \
        setup.py \
        awsbatch/ \
        pcluster/ \
        {posargs}

[testenv:vulture]
basepython = python3
skip_install = true
deps =
    vulture
commands =
    vulture \
        setup.py \
        awsbatch/ \
        pcluster/ \
        {posargs}

[testenv:mypy]
basepython = python3
deps =
    mypy
commands =
    mypy \
        setup.py \
        awsbatch/ \
        pcluster/ \
        {posargs}

[testenv:linters]
basepython = python3
skip_install = true
deps =
    {[testenv:black-check]deps}
    {[testenv:isort-check]deps}
    {[testenv:flake8]deps}
    {[testenv:pylint]deps}
    {[testenv:bandit]deps}
    {[testenv:readme]deps}
    {[testenv:doc8]deps}
commands =
    {[testenv:black-check]deps}
    {[testenv:isort-check]deps}
    {[testenv:flake8]deps}
    {[testenv:pylint]deps}
    {[testenv:bandit]deps}
    {[testenv:readme]deps}
    {[testenv:doc8]deps}


##############################
###     CLOUDFORMATION     ###
##############################
[testenv:cfn-lint]
basepython = python3
skip_install = true
changedir =
    ../cloudformation
deps = cfn-lint
commands = cfn-lint *.cfn.json

[testenv:cfn-format-check]
basepython = python3
skip_install = true
changedir =
    ../cloudformation
commands =
    python utils/json_formatter.py -c \
        aws-parallelcluster.cfn.json \
        batch-substack.cfn.json \
        ebs-substack.cfn.json

[testenv:cfn-format]
basepython = python3
skip_install = true
changedir =
    ../cloudformation
commands =
    python utils/json_formatter.py \
        aws-parallelcluster.cfn.json \
        batch-substack.cfn.json \
        ebs-substack.cfn.json

[testenv:cfn-tests]
basepython = python3
skip_install = true
changedir =
    ../cloudformation
commands =
    py.test -l --basetemp={envtmpdir} tests/


#############################
###     DOCUMENTATION     ###
#############################
[testenv:doc8]
basepython = python3
skip_install = true
deps =
    sphinx
    doc8
commands =
    doc8 ../docs/

[testenv:docs]
basepython = python3
whitelist_externals =
    make
deps = -r../docs/source/requirements.txt
changedir = ../docs
setenv = SPHINXOPTS=-E -W
commands =
    make html
    make man

[testenv:serve-docs]
basepython = python3
skip_install = true
changedir = ../docs/build/html
deps =
commands =
    python -m http.server {posargs}

[testenv:docs-spelling]
basepython = python3
skip_install = true
whitelist_externals =
    make
deps = -r../docs/requirements.txt
changedir = ../docs
setenv = SPHINXOPTS=-E -W
commands =
    make spelling

[testenv:docs-linkcheck]
basepython = python3
skip_install = true
whitelist_externals =
    make
deps = -r../docs/requirements.txt
changedir = ../docs
commands =
    make linkcheck


#############################
###        TOOLING        ###
#############################
[testenv:build]
basepython = python3
skip_install = true
deps =
    wheel
    setuptools
commands =
    python setup.py -q sdist bdist_wheel

