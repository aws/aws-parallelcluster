# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from pcluster.api.models.base_model_ import Model
from pcluster.api.models.requested_compute_fleet_status import RequestedComputeFleetStatus
from pcluster.api import util

from pcluster.api.models.requested_compute_fleet_status import RequestedComputeFleetStatus  # noqa: E501

class UpdateComputeFleetRequestContent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, status=None):  # noqa: E501
        """UpdateComputeFleetRequestContent - a model defined in OpenAPI

        :param status: The status of this UpdateComputeFleetRequestContent.  # noqa: E501
        :type status: RequestedComputeFleetStatus
        """
        self.openapi_types = {
            'status': RequestedComputeFleetStatus
        }

        self.attribute_map = {
            'status': 'status'
        }

        self._status = status

    @classmethod
    def from_dict(cls, dikt) -> 'UpdateComputeFleetRequestContent':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UpdateComputeFleetRequestContent of this UpdateComputeFleetRequestContent.  # noqa: E501
        :rtype: UpdateComputeFleetRequestContent
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self):
        """Gets the status of this UpdateComputeFleetRequestContent.


        :return: The status of this UpdateComputeFleetRequestContent.
        :rtype: RequestedComputeFleetStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this UpdateComputeFleetRequestContent.


        :param status: The status of this UpdateComputeFleetRequestContent.
        :type status: RequestedComputeFleetStatus
        """
        if status is None:
            raise ValueError("Invalid value for `status`, must not be `None`")  # noqa: E501

        self._status = status
