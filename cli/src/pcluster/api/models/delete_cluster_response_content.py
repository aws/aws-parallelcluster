# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from pcluster.api.models.base_model_ import Model
from pcluster.api.models.cluster_info_summary import ClusterInfoSummary
from pcluster.api import util

from pcluster.api.models.cluster_info_summary import ClusterInfoSummary  # noqa: E501

class DeleteClusterResponseContent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cluster=None):  # noqa: E501
        """DeleteClusterResponseContent - a model defined in OpenAPI

        :param cluster: The cluster of this DeleteClusterResponseContent.  # noqa: E501
        :type cluster: ClusterInfoSummary
        """
        self.openapi_types = {
            'cluster': ClusterInfoSummary
        }

        self.attribute_map = {
            'cluster': 'cluster'
        }

        self._cluster = cluster

    @classmethod
    def from_dict(cls, dikt) -> 'DeleteClusterResponseContent':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DeleteClusterResponseContent of this DeleteClusterResponseContent.  # noqa: E501
        :rtype: DeleteClusterResponseContent
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cluster(self):
        """Gets the cluster of this DeleteClusterResponseContent.


        :return: The cluster of this DeleteClusterResponseContent.
        :rtype: ClusterInfoSummary
        """
        return self._cluster

    @cluster.setter
    def cluster(self, cluster):
        """Sets the cluster of this DeleteClusterResponseContent.


        :param cluster: The cluster of this DeleteClusterResponseContent.
        :type cluster: ClusterInfoSummary
        """
        if cluster is None:
            raise ValueError("Invalid value for `cluster`, must not be `None`")  # noqa: E501

        self._cluster = cluster
