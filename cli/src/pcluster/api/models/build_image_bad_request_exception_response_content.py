# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from pcluster.api.models.base_model_ import Model
from pcluster.api.models.config_validation_message import ConfigValidationMessage
from pcluster.api import util

from pcluster.api.models.config_validation_message import ConfigValidationMessage  # noqa: E501

class BuildImageBadRequestExceptionResponseContent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, message=None, configuration_validation_errors=None):  # noqa: E501
        """BuildImageBadRequestExceptionResponseContent - a model defined in OpenAPI

        :param message: The message of this BuildImageBadRequestExceptionResponseContent.  # noqa: E501
        :type message: str
        :param configuration_validation_errors: The configuration_validation_errors of this BuildImageBadRequestExceptionResponseContent.  # noqa: E501
        :type configuration_validation_errors: List[ConfigValidationMessage]
        """
        self.openapi_types = {
            'message': str,
            'configuration_validation_errors': List[ConfigValidationMessage]
        }

        self.attribute_map = {
            'message': 'message',
            'configuration_validation_errors': 'configurationValidationErrors'
        }

        self._message = message
        self._configuration_validation_errors = configuration_validation_errors

    @classmethod
    def from_dict(cls, dikt) -> 'BuildImageBadRequestExceptionResponseContent':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The BuildImageBadRequestExceptionResponseContent of this BuildImageBadRequestExceptionResponseContent.  # noqa: E501
        :rtype: BuildImageBadRequestExceptionResponseContent
        """
        return util.deserialize_model(dikt, cls)

    @property
    def message(self):
        """Gets the message of this BuildImageBadRequestExceptionResponseContent.


        :return: The message of this BuildImageBadRequestExceptionResponseContent.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this BuildImageBadRequestExceptionResponseContent.


        :param message: The message of this BuildImageBadRequestExceptionResponseContent.
        :type message: str
        """

        self._message = message

    @property
    def configuration_validation_errors(self):
        """Gets the configuration_validation_errors of this BuildImageBadRequestExceptionResponseContent.


        :return: The configuration_validation_errors of this BuildImageBadRequestExceptionResponseContent.
        :rtype: List[ConfigValidationMessage]
        """
        return self._configuration_validation_errors

    @configuration_validation_errors.setter
    def configuration_validation_errors(self, configuration_validation_errors):
        """Sets the configuration_validation_errors of this BuildImageBadRequestExceptionResponseContent.


        :param configuration_validation_errors: The configuration_validation_errors of this BuildImageBadRequestExceptionResponseContent.
        :type configuration_validation_errors: List[ConfigValidationMessage]
        """

        self._configuration_validation_errors = configuration_validation_errors
