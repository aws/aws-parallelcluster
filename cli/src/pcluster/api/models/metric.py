# coding: utf-8

from __future__ import absolute_import

from datetime import date, datetime  # noqa: F401
from typing import Dict, List  # noqa: F401

from pcluster.api import util
from pcluster.api.models.base_model_ import Model


class Metric(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, metric_type=None, metric_value=None):  # noqa: E501
        """Metric - a model defined in OpenAPI

        :param metric_type: The metric_type of this Metric.  # noqa: E501
        :type metric_type: str
        :param metric_value: The metric_value of this Metric.  # noqa: E501
        :type metric_value: int
        """
        self.openapi_types = {"metric_type": str, "metric_value": int}

        self.attribute_map = {"metric_type": "metricType", "metric_value": "metricValue"}

        self._metric_type = metric_type
        self._metric_value = metric_value

    @classmethod
    def from_dict(cls, dikt) -> "Metric":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Metric of this Metric.  # noqa: E501
        :rtype: Metric
        """
        return util.deserialize_model(dikt, cls)

    @property
    def metric_type(self):
        """Gets the metric_type of this Metric.

        The metric type.  # noqa: E501

        :return: The metric_type of this Metric.
        :rtype: str
        """
        return self._metric_type

    @metric_type.setter
    def metric_type(self, metric_type):
        """Sets the metric_type of this Metric.

        The metric type.  # noqa: E501

        :param metric_type: The metric_type of this Metric.
        :type metric_type: str
        """

        self._metric_type = metric_type

    @property
    def metric_value(self):
        """Gets the metric_value of this Metric.

        The metric value.  # noqa: E501

        :return: The metric_value of this Metric.
        :rtype: int
        """
        return self._metric_value

    @metric_value.setter
    def metric_value(self, metric_value):
        """Sets the metric_value of this Metric.

        The metric value.  # noqa: E501

        :param metric_value: The metric_value of this Metric.
        :type metric_value: int
        """

        self._metric_value = metric_value
