# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from pcluster.api.models.base_model_ import Model
from pcluster.api import util


class UpdateClusterRequestContent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cluster_configuration=None):  # noqa: E501
        """UpdateClusterRequestContent - a model defined in OpenAPI

        :param cluster_configuration: The cluster_configuration of this UpdateClusterRequestContent.  # noqa: E501
        :type cluster_configuration: str
        """
        self.openapi_types = {
            'cluster_configuration': str
        }

        self.attribute_map = {
            'cluster_configuration': 'clusterConfiguration'
        }

        self._cluster_configuration = cluster_configuration

    @classmethod
    def from_dict(cls, dikt) -> 'UpdateClusterRequestContent':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UpdateClusterRequestContent of this UpdateClusterRequestContent.  # noqa: E501
        :rtype: UpdateClusterRequestContent
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cluster_configuration(self):
        """Gets the cluster_configuration of this UpdateClusterRequestContent.

        Cluster configuration as a YAML document.  # noqa: E501

        :return: The cluster_configuration of this UpdateClusterRequestContent.
        :rtype: str
        """
        return self._cluster_configuration

    @cluster_configuration.setter
    def cluster_configuration(self, cluster_configuration):
        """Sets the cluster_configuration of this UpdateClusterRequestContent.

        Cluster configuration as a YAML document.  # noqa: E501

        :param cluster_configuration: The cluster_configuration of this UpdateClusterRequestContent.
        :type cluster_configuration: str
        """
        if cluster_configuration is None:
            raise ValueError("Invalid value for `cluster_configuration`, must not be `None`")  # noqa: E501

        self._cluster_configuration = cluster_configuration
