# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from pcluster.api.models.base_model_ import Model
from pcluster.api.models.ami_info import AmiInfo
from pcluster.api import util

from pcluster.api.models.ami_info import AmiInfo  # noqa: E501

class ListOfficialImagesResponseContent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, images=None):  # noqa: E501
        """ListOfficialImagesResponseContent - a model defined in OpenAPI

        :param images: The images of this ListOfficialImagesResponseContent.  # noqa: E501
        :type images: List[AmiInfo]
        """
        self.openapi_types = {
            'images': List[AmiInfo]
        }

        self.attribute_map = {
            'images': 'images'
        }

        self._images = images

    @classmethod
    def from_dict(cls, dikt) -> 'ListOfficialImagesResponseContent':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ListOfficialImagesResponseContent of this ListOfficialImagesResponseContent.  # noqa: E501
        :rtype: ListOfficialImagesResponseContent
        """
        return util.deserialize_model(dikt, cls)

    @property
    def images(self):
        """Gets the images of this ListOfficialImagesResponseContent.


        :return: The images of this ListOfficialImagesResponseContent.
        :rtype: List[AmiInfo]
        """
        return self._images

    @images.setter
    def images(self, images):
        """Sets the images of this ListOfficialImagesResponseContent.


        :param images: The images of this ListOfficialImagesResponseContent.
        :type images: List[AmiInfo]
        """
        if images is None:
            raise ValueError("Invalid value for `images`, must not be `None`")  # noqa: E501

        self._images = images
