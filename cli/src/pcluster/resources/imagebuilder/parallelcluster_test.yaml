name: ParallelClusterTest
description: Test ParallelCluster AMI
schemaVersion: 1.0

constants:
  - CookbookDefaultFile:
      type: string
      value: /etc/chef/cookbooks/aws-parallelcluster/attributes/default.rb

phases:
  - name: test
    steps:
      ### utils ###
      - name: NvSwitches
        action: ExecuteBash
        inputs:
          commands:
            - |
              set -v
              NVSWITCHES=$(lspci -d 10de:1af1 | wc -l)
              echo "${NVSWITCHES}"

      ### tests ###
      - name: FabricManager
        action: ExecuteBash
        inputs:
          commands:
            - |
              set -vx
              if [ {{ test.NvSwitches.outputs.stdout }} -gt 1 ]; then
                echo "test fabric-manager daemon"
                systemctl show -p SubState nvidia-fabricmanager | grep -i running
                [[ $? -ne 0 ]] && echo "fabric-manager daemon test failed" && exit 1
                echo "NVIDIA Fabric Manager service correctly started"
              fi

      - name: CloudWatch
        action: ExecuteBash
        inputs:
          commands:
            - |
              set -vx
              /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a status | grep status | grep stopped
              [[ $? -ne 0 ]] && echo "amazon-cloudwatch-agent is not stopped" && exit 1
              echo "CloudWatch test passed"

      - name: ByosUser
        action: ExecuteBash
        inputs:
          commands:
            - |
              set -vx
              SYSTEM_USER_ID_START=$(grep -F "default['cluster']['byos']['system_user_id_start']" {{ CookbookDefaultFile }})
              for i in $(seq 0 9);
              do
                  UID=$(($i + $SYSTEM_USER_ID_START))
                  getent passwd ${UID}
                  [[ $? -ne 0 ]] && echo "uid ${UID} does not exist, it should be reserved for ParallelCluster system users." && exit 1
              done

      - name: ByosGroup
        action: ExecuteBash
        inputs:
          commands:
            - |
              set -vx
              SYSTEM_GROUP_ID_START=$(grep -F "default['cluster']['byos']['system_group_id_start']" {{ CookbookDefaultFile }})

              for i in $(seq 0 9);
              do
                  GID=$(($i + $SYSTEM_GROUP_ID_START))
                  getent group ${GID}
                  [[ $? -ne 0 ]] && echo "gid ${GID} does not exist, it should be reserved for ParallelCluster system group." && exit 1
              done
