# Volume encrypted defaults to True in AWS ParallelCluster version 3 while it defaults to False in AWS ParallelCluster version 2.
# In AWS ParallelCluster version 3, access to the Instance Metadata Service(IMDS) on the head node is restricted to the cluster administrator. If additional users required access to IMDS, you can set HeadNode/Imds/Secured to False.
# vpc_id = vpc-0e0f223cc35256b9a is ignored
# update_check = true is ignored
# ssh = ssh {CFN_USER}@{MASTER_IP} {ARGS} is ignored
# encrypted_ephemeral = true is ignored
# The configuration parameters under DevSettings are not officially supported and their name or structure may change
# over time without any commitment to be backward compatible.
# Duplicate names 'custom1' are not allowed in the SharedStorage section. Please change them before cluster creation.
# '_' is not allowed in the name of 'compute_resource ondemand_i1'. Please rename it before cluster creation.
# '_' is not allowed in the name of 'compute_resource ondemand_i3'. Please rename it before cluster creation.
# initial_count = 2 is ignored
# '_' is not allowed in the name of 'compute_resource ondemand_i2'. Please rename it before cluster creation.
Region: us-west-1
Image:
  CustomAmi: ami-12345
  Os: alinux2
AdditionalPackages:
  IntelSoftware:
    IntelHpcPlatform: true
Tags:
  - Key: key
    Value: value
  - Key: key2
    Value: value2
SharedStorage:
  - Name: custom1
    StorageType: Ebs
    MountDir: /shared_dir1
    EbsSettings:
      Encrypted: false
      VolumeType: gp2
  - Name: custom2
    StorageType: Ebs
    MountDir: /shared_dir1
    EbsSettings:
      VolumeType: gp2
  - Name: custom1
    StorageType: Ebs
    MountDir: /shared_dir1
    EbsSettings:
      VolumeType: gp2
      Raid:
        NumberOfVolumes: 2
        Type: 1
  - Name: customfs
    StorageType: Efs
    MountDir: efs
    EfsSettings:
      Encrypted: false
      PerformanceMode: generalPurpose
      FileSystemId: fs-12345
      KmsKeyId: 1234abcd-12ab-34cd-56ef-1234567890ab
      ProvisionedThroughput: 1024
      ThroughputMode: provisioned
  - Name: fs
    StorageType: FsxLustre
    MountDir: /fsx
    FsxLustreSettings:
      AutoImportPolicy: NEW_CHANGED
      FileSystemId: fs-073c3803dca3e28a6
      KmsKeyId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
      StorageCapacity: 3600
      DeploymentType: SCRATCH_2
      StorageType: SSD
      ImportedFileChunkSize: 1024
      ExportPath: s3://bucket/folder
      ImportPath: s3://bucket
      WeeklyMaintenanceStartTime: '1:00:00'
      AutomaticBackupRetentionDays: 35
      CopyTagsToBackups: true
      DailyAutomaticBackupStartTime: 01:03
      PerUnitStorageThroughput: 200
      BackupId: backup-fedcba98
      DriveCacheType: READ
Monitoring:
  Logs:
    CloudWatch:
      Enabled: true
      RetentionInDays: 14
  Dashboards:
    CloudWatch:
      Enabled: true
HeadNode:
  InstanceType: c5.xlarge
  Networking:
    SubnetId: subnet-0bfad12f6b586686c
    Proxy:
      HttpProxyAddress: https://x.x.x.x:8080
    SecurityGroups:
      - sg-xxxxxx
    AdditionalSecurityGroups:
      - sg-xxxxxx
  Ssh:
    KeyName: key01
    AllowedIps: string
  LocalStorage:
    RootVolume:
      Size: 35
    EphemeralVolume:
      MountDir: /test
  Dcv:
    Enabled: true
    Port: 8443
    AllowedIps: 0.0.0.0/0
  CustomActions:
    OnNodeStart:
      Script: s3://testbucket/pre_install.sh
      Args:
        - s3://testbucket/pre_install.sh
        - R
        - curl
        - wget
    OnNodeConfigured:
      Script: s3://testbucket/post_install.sh
      Args:
        - s3://testbucket/post_install.sh
        - R
        - curl
        - wget
  Iam:
    InstanceRole: arn:aws:iam::1234567:role/role_name
    AdditionalIamPolicies:
      - Policy: arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
    S3Access:
      - BucketName: testbucket
      - EnableWriteAccess: true
        BucketName: test
        KeyName: hello/*
Scheduling:
  Scheduler: slurm
  SlurmSettings:
    ScaledownIdletime: 10
    Dns:
      DisableManagedDns: true
  SlurmQueues:
    - Name: queue1
      ComputeResources:
        - Name: ondemand_i1
          InstanceType: c5.large
          MinCount: 1
          DisableSimultaneousMultithreading: true
          Efa:
            Enabled: true
            GdrSupport: false
        - Name: ondemand_i3
          InstanceType: c5.xlarge
          MinCount: 1
          SpotPrice: 5.88
          DisableSimultaneousMultithreading: true
          Efa:
            Enabled: true
            GdrSupport: false
      CustomActions:
        OnNodeStart:
          Script: s3://testbucket/pre_install.sh
          Args:
            - s3://testbucket/pre_install.sh
            - R
            - curl
            - wget
        OnNodeConfigured:
          Script: s3://testbucket/post_install.sh
          Args:
            - s3://testbucket/post_install.sh
            - R
            - curl
            - wget
      Iam:
        InstanceRole: arn:aws:iam::1234567:role/role_name
        AdditionalIamPolicies:
          - Policy: arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
        S3Access:
          - BucketName: testbucket
          - EnableWriteAccess: true
            BucketName: test
            KeyName: hello/*
      Networking:
        SubnetIds:
          - subnet-0bfad12f6b586686c
        SecurityGroups:
          - sg-xxxxxx
        AdditionalSecurityGroups:
          - sg-xxxxxx
        PlacementGroup:
          Enabled: true
        Proxy:
          HttpProxyAddress: https://x.x.x.x:8080
      ComputeSettings:
        LocalStorage:
          RootVolume:
            Size: 25
          EphemeralVolume:
            MountDir: /test
    - Name: queue2
      CapacityType: SPOT
      ComputeResources:
        - Name: ondemand_i2
          InstanceType: c4.large
          MinCount: 2
          MaxCount: 5
      CustomActions:
        OnNodeStart:
          Script: s3://testbucket/pre_install.sh
          Args:
            - s3://testbucket/pre_install.sh
            - R
            - curl
            - wget
        OnNodeConfigured:
          Script: s3://testbucket/post_install.sh
          Args:
            - s3://testbucket/post_install.sh
            - R
            - curl
            - wget
      Iam:
        InstanceRole: arn:aws:iam::1234567:role/role_name
        AdditionalIamPolicies:
          - Policy: arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
        S3Access:
          - BucketName: testbucket
          - EnableWriteAccess: true
            BucketName: test
            KeyName: hello/*
      Networking:
        SubnetIds:
          - subnet-0bfad12f6b586686c
        SecurityGroups:
          - sg-xxxxxx
        AdditionalSecurityGroups:
          - sg-xxxxxx
        PlacementGroup:
          Id: placement_group_id
        Proxy:
          HttpProxyAddress: https://x.x.x.x:8080
      ComputeSettings:
        LocalStorage:
          RootVolume:
            Size: 25
          EphemeralVolume:
            MountDir: /test
DevSettings:
  ClusterTemplate: s3://template_url
  InstanceTypesData: '{"hpc": {"InstanceType": "hpc", "CurrentGeneration": true, "FreeTierEligible":
    false, "SupportedUsageClasses": ["on-demand", "spot"], "SupportedRootDeviceTypes":
    ["ebs"], "SupportedVirtualizationTypes": ["hvm"], "BareMetal": true, "ProcessorInfo":
    {"SupportedArchitectures": ["x86_64"], "SustainedClockSpeedInGhz": 3.6}, "VCpuInfo":
    {"DefaultVCpus": 96}, "MemoryInfo": {"SizeInMiB": 196608}, "InstanceStorageSupported":
    false, "EbsInfo": {"EbsOptimizedSupport": "default", "EncryptionSupport": "supported",
    "EbsOptimizedInfo": {"BaselineBandwidthInMbps": 19000, "BaselineThroughputInMBps":
    2375, "BaselineIops": 80000, "MaximumBandwidthInMbps": 19000, "MaximumThroughputInMBps":
    2375, "MaximumIops": 80000}, "NvmeSupport": "unsupported"}, "NetworkInfo": {"NetworkPerformance":
    "25 Gigabit", "MaximumNetworkInterfaces": 15, "MaximumNetworkCards": 1, "DefaultNetworkCardIndex":
    0, "NetworkCards": [{"NetworkCardIndex": 0, "NetworkPerformance": "25 Gigabit",
    "MaximumNetworkInterfaces": 15}], "Ipv4AddressesPerInterface": 50, "Ipv6AddressesPerInterface":
    50, "Ipv6Supported": true, "EnaSupport": "required", "EfaSupported": true}, "PlacementGroupInfo":
    {"SupportedStrategies": ["cluster", "partition", "spread"]}, "HibernationSupported":
    false, "BurstablePerformanceSupported": false, "DedicatedHostsSupported": false,
    "AutoRecoverySupported": true}}'
  Cookbook:
    ExtraChefAttributes: '{"cluster": {"scheduler_slots": "cores"}}'
    ChefCookbook: s3://custom_cookbook
