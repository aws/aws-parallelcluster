# Identifies the ParallelCluster scheduler plugin interface version the plugin is implementing.
PluginInterfaceVersion: "1.0"
# This section can be freely used to attach any metadata that describe the plugin.
#  None of these fields are strictly required but when specified they can be used by ParallelCluster to describe
# additional info about the used plugin.
Metadata:
  Scheduler:
    Name: my-scheduler
    Version: scheduler-version
  Author: author
  Documentation: link
  License: link
  Version: 1.0.0
# Define the plugin requirements that are validated by ParallelCluster against a cluster configuration.
Requirements:
  RequiresSudoPrivileges: true
  # # Select the list of distributions supported by the plugin. Defaults to all ParallelCluster supported distros.
  # SupportedDistros:
  #   x86_64: ["alinux2", "ubuntu2004", "ubuntu1804", "centos7"]
  #   arm64: ["alinux2", "ubuntu2004", "ubuntu1804"]
  # # Restrict the AWS regions supported by the plugin. Defaults to all ParallelCluster supported regions.
  # SupportedRegions: ["us-east-1"]
  # QueueConstraints:
  #   # Max number of scheduler queues that can be configured for the plugin. Defaults to 10.
  #   MaxCount: 10
  #   # Max number of subnets that can be configured for each queue. Defaults to 1.
  #   MaxSubnetsCount: 1
  # ComputeResourceConstraints:
  #   # Max number of ComputeResources that can be configured for each queue. Defaults to 5.
  #   MaxCount: 5
  # # When set to false all ClusterUpdate operations that modify the Scheduling section are forbidden.
  # SupportsClusterUpdate: true
  # This allows to constrain the ParallelCluster version supported by the plugin.
  # Defaults to all ParallelCluster version compatible with the interface version declared in PluginInterfaceVersion
  # SupportedParallelClusterVersions: ">=3.0.0"
# Define the additional AWS resources that need to be created/updated/deleted together with a cluster.
ClusterInfrastructure:
  CloudFormation:
    # Reference to a CloudFormation template that is created as a nested stack of the main cluster stack.
    # In order to allow access to regionalized resources the ${Region} and the ${URLSuffix} variables are made available
    # when defining this url. The template can be specified as an S3 or HTTPS url.
    Template: s3://<BUCKET>/scheduler_plugins/plugin_template/additional_cluster_infrastructure.cfn.yaml
    # Template: https://<BUCKET>.s3.${Region}.${URLSuffix}/scheduler_plugins/plugin_template/additional_cluster_infrastructure.cfn.yaml
PluginResources:
  # HTTPS or S3 URL of remote resources that ParallelCluster downloads and makes available to plugin event handlers.
  # In order to allow access to regionalized resources the ${Region} and the ${URLSuffix} variables are made available
  # when defining this String.
  ClusterSharedArtifacts:
    - Source: s3://<BUCKET>/scheduler_plugins/plugin_template/artifacts.tar.gz
      # Source: https://<BUCKET>.s3.${Region}.${URLSuffix}/scheduler_plugins/plugin_template/artifacts.tar.gz
# The scheduler plugins will (possibly) require a number of “system” level users to run various processes.
# This section can be used to create system users with a consistent user id on all cluster nodes.
SystemUsers:
  - Name: super-user
    # Whether or not such user has access to IMDS, hence to IAM Instance Profile
    EnableImds: true
    SudoerConfiguration:
      - Commands: ALL
        RunAs: root
  - Name: unprivileged-user
  - Name: imds-only-user
    EnableImds: true
# Allows the definition of the actions to execute in order to handle the various events triggered by ParallelCluster.
Events:
  HeadInit:
    ExecuteCommand:
      Command: /bin/bash -c 'tar -xf artifacts.tar.gz && artifacts/handlers/head_init.sh'
  HeadConfigure:
    ExecuteCommand:
      Command: artifacts/handlers/head_configure.sh
  HeadFinalize:
    ExecuteCommand:
      Command: artifacts/handlers/head_finalize.sh
  ComputeInit:
    ExecuteCommand:
      Command: artifacts/handlers/compute_init.sh
  ComputeConfigure:
    ExecuteCommand:
      Command: artifacts/handlers/compute_configure.sh
  ComputeFinalize:
    ExecuteCommand:
      Command: artifacts/handlers/compute_finalize.sh
  HeadClusterUpdate:
    ExecuteCommand:
      Command: artifacts/handlers/head_cluster_update.sh
  HeadComputeFleetUpdate:
    ExecuteCommand:
      Command: artifacts/handlers/head_compute_fleet_update.sh
# Allows the registration of custom log files to be uploaded to the CloudWatch log group managed by ParallelCluster
Monitoring:
  Logs:
    Files:
    - FilePath: /var/log/parallelcluster-plugin/mypluginlog.log
      TimestampFormat: '%Y-%m-%dT%H:%M:%S%z'
      NodeType: ALL
      LogStreamName: mypluginlog
