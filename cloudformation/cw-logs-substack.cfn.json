{
  "Conditions": {
    "CreateCloudWatchLogGroup": {
      "Fn::Equals": [
        {
          "Fn::Select": [
            "0",
            {
              "Fn::Split": [
                ",",
                {
                  "Ref": "CWLogOptions"
                }
              ]
            }
          ]
        },
        "true"
      ]
    },
    "CreateCleanupResourcesFunctionLogGroup": {
      "Fn::Equals": [
        {
          "Ref": "CreateCleanupResourcesFunctionLogGroup"
        },
        "true"
      ]
    },
    "CreateAWSBatchLogGroups": {
      "Fn::Equals": [
        {
          "Ref": "CreateAWSBatchLogGroups"
        },
        "true"
      ]
    }
  },
  "Parameters": {
    "CWLogOptions": {
      "Description": "Comma separated list of CloudWatch logging, 2 parameters in total, [enabled, retention_days]",
      "Type": "String"
    },
    "CWLogGroupName": {
      "Description": "Name of the CloudWatch Log Group to be created",
      "Type": "String"
    },
    "MainStackName": {
      "Description": "Name of the main CloudFormation stack",
      "Type": "String"
    },
    "MainStackUniqueId": {
      "Description": "Final 36 digits of the main CloudFormation stack id",
      "Type": "String"
    },
    "CreateCleanupResourcesFunctionLogGroup": {
      "Description": "Set to true in order to create the log group for CreateCleanupResourcesFunction",
      "Type": "String"
    },
    "CreateAWSBatchLogGroups": {
      "Description": "Set to true in order to create the log groups for AWS Batch scheduler",
      "Type": "String"
    }
  },
  "Resources": {
    "CloudWatchLogGroup": {
      "Condition": "CreateCloudWatchLogGroup",
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": {
          "Ref": "CWLogGroupName"
        },
        "RetentionInDays": {
          "Fn::Select": [
            "1",
            {
              "Fn::Split": [
                ",",
                {
                  "Ref": "CWLogOptions"
                }
              ]
            }
          ]
        }
      }
    },
    "CleanupResourcesFunctionLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": {
          "Fn::Sub": "/aws/lambda/pcluster-CleanupResources-${MainStackUniqueId}"
        },
        "RetentionInDays": {
          "Fn::Select": [
            "1",
            {
              "Fn::Split": [
                ",",
                {
                  "Ref": "CWLogOptions"
                }
              ]
            }
          ]
        }
      },
      "Condition": "CreateCleanupResourcesFunctionLogGroup"
    },
    "CodeBuildLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": {
          "Fn::Sub": "/aws/codebuild/${MainStackName}-CodeBuildDockerImageBuilderProject"
        },
        "RetentionInDays": {
          "Fn::Select": [
            "1",
            {
              "Fn::Split": [
                ",",
                {
                  "Ref": "CWLogOptions"
                }
              ]
            }
          ]
        }
      },
      "Condition": "CreateAWSBatchLogGroups"
    },
    "ManageDockerImagesFunctionLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": {
          "Fn::Sub": "/aws/lambda/pcluster-ManageDockerImages-${MainStackUniqueId}"
        },
        "RetentionInDays": {
          "Fn::Select": [
            "1",
            {
              "Fn::Split": [
                ",",
                {
                  "Ref": "CWLogOptions"
                }
              ]
            }
          ]
        }
      },
      "Condition": "CreateAWSBatchLogGroups"
    },
    "SendBuildNotificationFunctionLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": {
          "Fn::Sub": "/aws/lambda/pcluster-SendBuildNotificat-${MainStackUniqueId}"
        },
        "RetentionInDays": {
          "Fn::Select": [
            "1",
            {
              "Fn::Split": [
                ",",
                {
                  "Ref": "CWLogOptions"
                }
              ]
            }
          ]
        }
      },
      "Condition": "CreateAWSBatchLogGroups"
    }
  },
  "Outputs": {
    "Enabled": {
      "Description": "'true' if CloudWatch logging is enabled for this cluster, 'false' otherwise",
      "Value": {
        "Fn::Select": [
          "0",
          {
            "Fn::Split": [
              ",",
              {
                "Ref": "CWLogOptions"
              }
            ]
          }
        ]
      }
    }
  }
}
