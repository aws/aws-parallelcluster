name: ParallelCluster CI

on: [push, pull_request]

jobs:
  depcheck:
    runs-on: ubuntu-latest
    name: DepCheck
    steps:
      - uses: actions/checkout@v2
      - name: Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          path: './cli'
          format: 'HTML'
      - name: Upload Test results
        uses: actions/upload-artifact@master
        with:
          name: Depcheck report
          path: ${{github.workspace}}/cli-reports
      - name: AWS Batch CLI Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          path: './awsbatch-cli'
          format: 'HTML'
      - name: Upload AWS Batch CLI Test results
        uses: actions/upload-artifact@master
        with:
          name: Depcheck report
          path: ${{github.workspace}}/awsbatch-cli-reports
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        name:
          - Python 3.6 Tests
          - Python 3.7 Tests
          - Python 3.8 Tests
          - Python 3.9 Tests
          - Python 3.8 Tests Coverage
          - Code Checks
          - CLI CloudFormation Templates Checks
          - API CloudFormation Templates Checks
          - Integration Tests Config Checks
          - Python 3.6 AWS Batch CLI Tests
          - Python 3.7 AWS Batch CLI Tests
          - Python 3.8 AWS Batch CLI Tests
          - Python 3.9 AWS Batch CLI Tests
          - Python 3.8 AWS Batch CLI Tests Coverage
          - Code Checks AWS Batch CLI
        include:
          - name: Python 3.6 Tests
            python: 3.6
            toxdir: cli
            toxenv: py36-nocov
          - name: Python 3.7 Tests
            python: 3.7
            toxdir: cli
            toxenv: py37-nocov
          - name: Python 3.8 Tests
            python: 3.8
            toxdir: cli
            toxenv: py38-nocov
          - name: Python 3.9 Tests
            python: 3.9
            toxdir: cli
            toxenv: py39-nocov
          - name: Python 3.8 Tests Coverage
            python: 3.8
            toxdir: cli
            toxenv: py38-cov
          - name: Code Checks
            python: 3.6
            toxdir: cli
            toxenv: code-linters
          - name: CLI CloudFormation Templates Checks
            python: 3.6
            toxdir: cli
            toxenv: cfn-format-check,cfn-lint,cfn-tests
          - name: API CloudFormation Templates Checks
            python: 3.6
            toxdir: api
            toxenv: cfn-lint
          - name: Integration Tests Config Checks
            python: 3.6
            toxdir: tests/integration-tests
            toxenv: validate-test-configs
          - name: Python 3.6 AWS Batch CLI Tests
            python: 3.6
            toxdir: awsbatch-cli
            toxenv: py36-nocov
          - name: Python 3.7 AWS Batch CLI Tests
            python: 3.7
            toxdir: awsbatch-cli
            toxenv: py37-nocov
          - name: Python 3.8 AWS Batch CLI Tests
            python: 3.8
            toxdir: awsbatch-cli
            toxenv: py38-nocov
          - name: Python 3.9 AWS Batch CLI Tests
            python: 3.9
            toxdir: awsbatch-cli
            toxenv: py39-nocov
          - name: Python 3.8 AWS Batch CLI Tests Coverage
            python: 3.8
            toxdir: awsbatch-cli
            toxenv: py38-cov
          - name: Code Checks AWS Batch CLI
            python: 3.6
            toxdir: awsbatch-cli
            toxenv: code-linters
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install Tox and any other packages
        run: pip install tox
      - name: Run Tox
        run: cd ${{ matrix.toxdir }} && tox -e ${{ matrix.toxenv }}
  validate-api-model:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - run: |
          sudo npm install -g redoc-cli
          sudo snap install yq
      - working-directory: api
        run: ./gradlew buildSmithyModel openApiValidate
  api-docker-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: mikefarah/yq@v4.6.3
      - run: api/docker/awslambda/docker-build.sh
